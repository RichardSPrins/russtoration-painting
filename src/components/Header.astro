---
import navData from "@data/navData.json";
import clientData from "@data/client.json";
---

<!-- ============================================ --><!--                 Navigation                   --><!-- ============================================ -->
<header id="cs-navigation">
  <div class="cs-top-bar">
    <div class="cs-top-container">
      <div class="cs-top-social">
        <a href="" class="cs-social-link">
          <img
            class="cs-social-icon"
            src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Icons/facebook-dark.svg"
            alt="logo"
            width="12"
            height="12"
            aria-hidden="true"
            decoding="async"
          />
        </a>
        <!-- <a href="" class="cs-social-link">
          <img
            class="cs-social-icon"
            src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Icons/twitter-dark.svg"
            alt="logo"
            width="12"
            height="12"
            aria-hidden="true"
            decoding="async"
          />
        </a> -->
        <a href="" class="cs-social-link">
          <img
            class="cs-social-icon"
            src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Icons/instagram-dark.svg"
            alt="logo"
            width="12"
            height="12"
            aria-hidden="true"
            decoding="async"
          />
        </a>
        <!-- <a href="" class="cs-social-link">
          <img
            class="cs-social-icon"
            src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Icons/youtube-dark.svg"
            alt="logo"
            width="12"
            height="12"
            aria-hidden="true"
            decoding="async"
          />
        </a> -->
      </div>
      <div class="cs-top-contact">
        <a href={clientData.phoneForTel} class="cs-top-link">
          <img
            class="cs-link-icon"
            src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Icons/charity-phone-green.svg"
            alt="logo"
            width="16"
            height="16"
            aria-hidden="true"
            decoding="async"
          />
          {clientData.phoneFormatted}
        </a>
        <a href="/contact-us" class="cs-top-link">
          <img
            class="cs-link-icon"
            src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Icons/charity-clock-green.svg"
            alt="logo"
            width="20"
            height="20"
            aria-hidden="true"
            decoding="async"
          />
          M-F: 8:00am - 6:00pm
        </a>
      </div>
    </div>
  </div>
  <div class="cs-container">
    <!--Nav Logo-->
    <a href="/" class="cs-logo" aria-label="back to home">
      <img
        src="/assets/svgs/rp-logo-black.svg"
        alt="logo"
        width="197"
        height="60"
        aria-hidden="true"
        decoding="async"
      />
    </a>
    <!--Navigation List-->
    <nav class="cs-nav" role="navigation">
      <!--Mobile Nav Toggle-->
      <button class="cs-toggle" aria-label="mobile menu toggle">
        <div class="cs-box" aria-hidden="true">
          <span class="cs-line cs-line1" aria-hidden="true"></span>
          <span class="cs-line cs-line2" aria-hidden="true"></span>
          <span class="cs-line cs-line3" aria-hidden="true"></span>
        </div>
      </button>
      <!-- We need a wrapper div so we can set a fixed height on the cs-ul in case the nav list gets too long from too many dropdowns being opened and needs to have an overflow scroll. This wrapper acts as the background so it can go the full height of the screen and not cut off any overflowing nav items while the cs-ul stops short of the bottom of the screen, which keeps all nav items in view no matter how mnay there are-->
      <div class="cs-ul-wrapper">
        <ul id="cs-expanded" class="cs-ul" aria-expanded="false">
          {
            navData.map((entry) => (
              <li
                class:list={[
                  "cs-li",
                  { "cs-dropdown": entry.children?.length > 0 },
                ]}
                tabindex={entry.children?.length > 0 ? "0" : ""}
              >
                <a
                  href={entry.url}
                  class:list={[
                    "cs-li-link",
                    { "cs-active": Astro.url.pathname === entry.url },
                  ]}
                >
                  {entry.key}
                  {entry.children?.length > 0 && (
                    <img
                      alt="dropdown icon"
                      decoding="async"
                      height="15"
                      src="/assets/svgs/dropdown.svg"
                      width="15"
                      aria-hidden="true"
                      class="cs-drop-icon"
                    />
                  )}
                </a>
                {entry.children?.length > 0 && (
                  <ul class="cs-drop-ul">
                    {entry.children.map((child) => (
                      <li class="cs-drop-li">
                        <a href={child.url} class="cs-li-link cs-drop-link">
                          {child.key}
                        </a>
                      </li>
                    ))}
                  </ul>
                )}
              </li>
            ))
          }
        </ul>
      </div>
    </nav>
    <a href="/contact" class="cs-button-solid cs-nav-button">GET A QUOTE</a>
  </div>
</header>

<style lang="less">
  /*-- -------------------------- -->
<---     Mobile Navigation      -->
<--- -------------------------- -*/

  body,
  html {
    /* reset margin and padding so there's no gap between the nav and the screen edges */
    margin: 0;
    padding: 0;
  }

  /* Mobile - 1023px */
  @media only screen and (max-width: 63.9375rem) {
    body {
      &.cs-open {
        overflow: hidden;
      }

      &.scroll {
        #cs-navigation {
          .cs-top-container {
            gap: 0;
          }

          .cs-top-social {
            height: 0;
            opacity: 0;
            overflow: hidden;
            visibility: hidden;
          }
        }
      }
    }

    #cs-navigation {
      width: 100%;
      /* prevents padding and border from affecting height and width */
      box-sizing: border-box;
      background-color: #fff;
      box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
      position: fixed;
      z-index: 10000;

      &.cs-active {
        .cs-ul-wrapper {
          opacity: 1;
          transform: scaleY(1);
        }

        .cs-li {
          transform: translateY(0);
          opacity: 1;
        }
      }

      .cs-top-bar {
        width: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
      }

      .cs-top-container {
        width: 100%;
        padding: (16/16rem) (16/16rem) 0;
        /* prevents padding and border from affecting height and width */
        box-sizing: border-box;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        align-items: center;
        gap: (16/16rem);
      }

      .cs-top-contact {
        width: 100%;
        padding-bottom: (16/16rem);
        /* prevents padding and border from affecting height and width */
        box-sizing: border-box;
        border-bottom: 1px solid #e8e8e8;
        display: flex;
        justify-content: center;
        align-items: center;
        /* 16px - 20px */
        gap: clamp(1rem, 2vw, 1.5rem);
      }

      .cs-top-link {
        font-size: (14/16rem);
        line-height: 1.5em;
        text-decoration: none;
        margin: 0;
        color: var(--bodyTextColor);
        display: flex;
        justify-content: flex-start;
        align-items: center;
        gap: (8/16rem);
        position: relative;

        &:nth-of-type(2) {
          display: none;
        }

        // &:last-of-type {
        //   &:after {
        //     display: none;
        //   }
        // }

        // &:after {
        //   content: "";
        //   width: 1px;
        //   height: (24/16rem);
        //   /* 8px - 16px */
        //   margin-left: clamp(0.5rem, 1.5vw, 1rem);
        //   background: #bababa;
        //   opacity: 1;
        //   position: relative;
        //   display: block;
        // }
      }

      .cs-link-icon {
        width: (16/16rem);
        height: auto;
        display: block;
      }

      .cs-top-social {
        height: (32/16rem);
        visibility: visible;
        opacity: 1;
        display: flex;
        justify-content: center;
        align-items: center;
        gap: (8/16rem);
        transition:
          opacity 0.3s,
          visibility 0.3s,
          height 0.3s;
      }

      .cs-social-link {
        text-decoration: none;
        width: (32/16rem);
        height: (32/16rem);
        background-color: #f7f7f7;
        border-radius: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
      }

      .cs-social-icon {
        width: (12/16rem);
        height: auto;
        opacity: 0.6;
        display: block;
      }

      .cs-container {
        width: 100%;
        /* 16px - 20px */
        padding: clamp(1rem, 2.5vw, 1.25rem) (16/16rem);
        /* prevents padding and border from affecting height and width */
        box-sizing: border-box;
        display: flex;
        justify-content: flex-end;
        align-items: center;
        position: relative;
      }

      .cs-logo {
        width: auto;
        /* 32px - 48px */
        height: clamp(2rem, 6.4vw, 3rem);
        margin: 0 auto 0 0;
        padding: 0;
        /* prevents padding and border from affecting height and width */
        box-sizing: border-box;
        display: flex;
        justify-content: center;
        align-items: center;
        order: 1;
        z-index: 10;

        img {
          width: auto;
          height: 100%;
          /* ensures the image never overflows the container. It stays contained within it's width and height and expands to fill it then stops once it reaches an edge */
          object-fit: contain;
        }
      }

      .cs-nav {
        order: 2;
      }

      .cs-toggle {
        /* 48px - 56px */
        width: clamp(3rem, 7.2vw, 3.5rem);
        height: clamp(3rem, 7.2vw, 3.5rem);
        margin: 0 0 0 auto;
        background-color: var(--primary);
        border-radius: (4/16rem);
        border: none;
        display: flex;
        justify-content: center;
        align-items: center;
        transition: transform 0.6s;

        &.cs-active {
          transform: rotate(180deg);
        }
      }

      .cs-active {
        .cs-line1 {
          top: 50%;
          transform: translate(-50%, -50%) rotate(225deg);
        }

        .cs-line2 {
          top: 50%;
          transform-origin: center;
          transform: translate(-50%, -50%) translateY(0) rotate(-225deg);
        }

        .cs-line3 {
          bottom: 100%;
          opacity: 0;
        }
      }

      .cs-box {
        /* 24px - 28px */
        width: clamp(1.5rem, 2vw, 1.75rem);
        height: (16/16rem);
        position: relative;
      }

      .cs-line {
        width: 100%;
        height: 2px;
        border-radius: 2px;
        background-color: #fafbfc;
        position: absolute;
        left: 50%;
        transform: translateX(-50%);
      }

      .cs-line1 {
        top: 0;
        transform-origin: center;
        transition:
          transform 0.5s,
          top 0.3s,
          left 0.3s;
        animation-duration: 0.7s;
        animation-timing-function: ease;
        animation-fill-mode: forwards;
        animation-direction: normal;
      }

      .cs-line2 {
        top: 50%;
        transform: translateX(-50%) translateY(-50%);
        transition:
          top 0.3s,
          left 0.3s,
          transform 0.5s;
        animation-duration: 0.7s;
        animation-timing-function: ease;
        animation-fill-mode: forwards;
        animation-direction: normal;
      }

      .cs-line3 {
        bottom: 0;
        transition:
          bottom 0.3s,
          opacity 0.3s;
      }

      .cs-ul-wrapper {
        width: 100%;
        height: 100vh;
        padding-bottom: (48/16rem);
        opacity: 0;
        background-color: #fff;
        box-shadow: inset rgba(0, 0, 0, 0.2) 0px 8px 24px;
        overflow: hidden;
        position: absolute;
        top: 100%;
        left: 0;
        z-index: -1;
        transform: scaleY(0);
        transform-origin: top;
        transition:
          transform 0.4s,
          opacity 0.3s;
      }

      .cs-ul {
        margin: 0;
        padding: (48/16rem) 0 0 0;
        width: 100%;
        height: auto;
        max-height: 65vh;
        overflow: scroll;
        display: flex;
        justify-content: flex-start;
        flex-direction: column;
        align-items: center;
        gap: (20/16rem);
      }

      .cs-li {
        list-style: none;
        margin-right: 0;
        /* transition from these values */
        transform: translateY(-4.375rem);
        opacity: 0;
        transition:
          transform 0.6s,
          opacity 0.9s;

        &:nth-of-type(1) {
          transition-delay: 0.05s;
        }
        &:nth-of-type(2) {
          transition-delay: 0.1s;
        }
        &:nth-of-type(3) {
          transition-delay: 0.15s;
        }
        &:nth-of-type(4) {
          transition-delay: 0.2s;
        }
        &:nth-of-type(5) {
          transition-delay: 0.25s;
        }
        &:nth-of-type(6) {
          transition-delay: 0.3s;
        }
        &:nth-of-type(7) {
          transition-delay: 0.35s;
        }
        &:nth-of-type(8) {
          transition-delay: 0.4s;
        }
        &:nth-of-type(9) {
          transition-delay: 0.45s;
        }
      }

      .cs-li-link {
        /* 16px - 24px */
        font-size: clamp(1rem, 3vw, 1.5rem);
        line-height: 1.2em;
        text-decoration: none;
        margin: 0;
        color: var(--headerColor);
        display: inline-block;
        position: relative;

        &:before {
          /* active state underline */
          content: "";
          width: 100%;
          height: 1px;
          background: currentColor;
          opacity: 1;
          position: absolute;
          display: none;
          bottom: (-2/16rem);
          left: 0;
        }

        &.cs-active {
          &:before {
            display: block;
          }
        }
      }

      .cs-button-solid {
        display: none;
      }

      .cs-donate {
        text-decoration: none;
        margin-right: (32/16rem);
        display: none;
        justify-content: center;
        align-items: center;
        gap: (12/16rem);
        order: 1;
      }

      .cs-flex {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
      }

      .cs-donate-icon {
        width: (56/16rem);
        height: auto;
      }

      .cs-desc {
        font-size: (16/16rem);
        line-height: 1.5em;
        margin: 0;
        color: var(--bodyTextColor);
      }

      .cs-header {
        font-size: (20/16rem);
        line-height: 1.2em;
        font-weight: 700;
        margin: 0;
        color: var(--headerColor);
      }
    }
  }

  /* Tablet - 768px */
  @media only screen and (min-width: 48rem) {
    #cs-navigation {
      .cs-top-container {
        padding-bottom: (16/16rem);
        border-bottom: 1px solid #e8e8e8;
        flex-direction: row;
        justify-content: space-between;
      }

      .cs-top-contact {
        width: auto;
        padding: 0;
        border: none;
      }

      .cs-donate {
        display: flex;
      }
    }
  }

  /*-- -------------------------- -->
<---     Navigation Dropdown    -->
<--- -------------------------- -*/

  /* Mobile - 1023px */
  @media only screen and (max-width: 63.9375rem) {
    #cs-navigation {
      .cs-li {
        text-align: center;
        width: 100%;
        display: block;
      }

      .cs-dropdown {
        position: relative;
        color: var(--bodyTextColorWhite);
        &.cs-active {
          .cs-drop-ul {
            height: auto;
            opacity: 1;
            visibility: visible;
            margin: (12/16rem) 0 0 0;
            padding: (12/16rem) 0;
          }

          .cs-drop-link {
            opacity: 1;
          }
        }

        .cs-li-link {
          position: relative;
          transition: opacity 0.3s;
        }
      }

      .cs-drop-icon {
        width: (15/16rem);
        height: auto;
        position: absolute;
        top: 50%;
        right: (-20/16rem);
        transform: translateY(-50%);
      }

      .cs-drop-ul {
        width: 100%;
        height: 0;
        margin: 0;
        padding: 0;
        background-color: var(--primary);
        overflow: hidden;
        opacity: 0;
        visibility: hidden;
        display: flex;
        justify-content: flex-start;
        flex-direction: column;
        align-items: center;
        gap: (12/16rem);
        transition:
          padding 0.3s,
          margin 0.3s,
          height 0.3s,
          opacity 0.3s,
          visibility 0.3s;
      }

      .cs-drop-li {
        list-style: none;
      }

      .cs-li-link {
        &.cs-drop-link {
          /* 14px - 16px */
          font-size: clamp(0.875rem, 2vw, 1.25rem);
          color: #fff;
        }
      }
    }
  }

  /* Desktop - 1024px */
  @media only screen and (min-width: 64rem) {
    #cs-navigation {
      .cs-dropdown {
        position: relative;
        &:hover {
          cursor: pointer;
          .cs-drop-ul {
            transform: scaleY(1);
            opacity: 1;
            visibility: visible;
          }

          .cs-drop-li {
            opacity: 1;
            transform: translateY(0);
          }
        }
      }

      .cs-drop-icon {
        width: (15/16rem);
        height: auto;
        display: inline-block;
      }

      .cs-drop-ul {
        min-width: (200/16rem);
        margin: 0;
        padding: 0;
        background-color: #fff;
        overflow: hidden;
        opacity: 0;
        visibility: hidden;
        box-shadow: rgba(149, 157, 165, 0.2) 0px 10px 16px;
        border-bottom: 5px solid var(--primary);
        /* if you have 8 or more links in your dropdown nav, uncomment the columns property to make the list into 2 even columns. Change it to 3 or 4 if you need extra columns. Then remove the transition delays on the cs-drop-li so they don't have weird scattered animations */
        // columns: 2;
        position: absolute;
        top: 100%;
        z-index: -100;
        transform: scaleY(0);
        transform-origin: top;
        transition:
          transform 0.3s,
          visibility 0.3s,
          opacity 0.3s;
      }

      .cs-drop-li {
        list-style: none;
        font-size: (16/16rem);
        text-decoration: none;
        opacity: 0;
        width: 100%;
        height: auto;
        display: block;
        transform: translateY(-0.625rem);
        transition:
          opacity 0.6s,
          transform 0.6s;

        &:nth-of-type(1) {
          transition-delay: 0.05s;
        }
        &:nth-of-type(2) {
          transition-delay: 0.1s;
        }
        &:nth-of-type(3) {
          transition-delay: 0.15s;
        }
        &:nth-of-type(4) {
          transition-delay: 0.2s;
        }
        &:nth-of-type(5) {
          transition-delay: 0.25s;
        }
        &:nth-of-type(6) {
          transition-delay: 0.3s;
        }
        &:nth-of-type(7) {
          transition-delay: 0.35s;
        }
        &:nth-of-type(8) {
          transition-delay: 0.4s;
        }
        &:nth-of-type(9) {
          transition-delay: 0.45s;
        }
        &:nth-of-type(10) {
          transition-delay: 0.5s;
        }
        &:nth-of-type(11) {
          transition-delay: 0.55s;
        }
        &:nth-of-type(12) {
          transition-delay: 0.6s;
        }
        &:nth-of-type(13) {
          transition-delay: 0.65s;
        }
      }

      .cs-li-link {
        &.cs-drop-link {
          font-size: (16/16rem);
          white-space: nowrap;
          line-height: 1.5em;
          text-decoration: none;
          width: 100%;
          padding: (12/16rem);
          /* prevents padding and border from affecting height and width */
          box-sizing: border-box;
          color: var(--bodyTextColor);
          display: block;
          transition:
            color 0.3s,
            background-color 0.3s;

          &:hover {
            color: var(--primary);
            background-color: #f7f7f7;
          }

          &:before {
            display: none;
          }
        }
      }
    }
  }

  /*-- -------------------------- -->
<---     Desktop Navigation     -->
<--- -------------------------- -*/

  /* Small Desktop - 1024px */
  @media only screen and (min-width: 64rem) {
    #cs-navigation {
      width: 100%;
      padding: 0;
      /* prevents padding and border from affecting height and width */
      box-sizing: border-box;
      background-color: #fff;
      box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
      position: fixed;
      z-index: 10000;

      .cs-top-bar {
        width: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
      }

      .cs-top-container {
        width: 100%;
        max-width: (1720/16rem);
        padding: (16/16rem);
        /* prevents padding and border from affecting height and width */
        box-sizing: border-box;
        display: flex;
        justify-content: space-between;
        align-items: center;
        gap: (50/16rem);
      }

      .cs-top-contact {
        display: flex;
        justify-content: flex-start;
        align-items: center;
        gap: (24/16rem);
      }

      .cs-top-link {
        font-size: (14/16rem);
        line-height: 1.5em;
        text-decoration: none;
        margin: 0;
        color: var(--bodyTextColor);
        display: flex;
        justify-content: flex-start;
        align-items: center;
        gap: (8/16rem);
        position: relative;

        &:hover {
          text-decoration: underline;
        }

        &:last-of-type {
          &:after {
            display: none;
          }
        }

        &:after {
          content: "";
          width: 1px;
          height: (24/16rem);
          /* 8px - 16px */
          margin-left: clamp(0.5rem, 1.5vw, 1rem);
          background: #bababa;
          opacity: 1;
          position: relative;
          display: block;
        }
      }

      .cs-link-icon {
        width: (16/16rem);
        height: auto;
        display: block;
      }

      .cs-top-social {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: (8/16rem);
      }

      .cs-social-link {
        text-decoration: none;
        width: (32/16rem);
        height: (32/16rem);
        background-color: #f7f7f7;
        border-radius: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
        transition: background-color 0.3s;

        &:hover {
          background-color: var(--primary);
        }
      }

      .cs-social-icon {
        width: (12/16rem);
        height: auto;
        opacity: 0.6;
        display: block;
      }

      .cs-container {
        width: 100%;
        max-width: (1720/16rem);
        margin: auto;
        padding: 0 (16/16rem);
        /* prevents padding from affectin gheight */
        box-sizing: border-box;
        display: flex;
        justify-content: flex-end;
        align-items: center;
        gap: (24/16rem);
        position: relative;
      }

      .cs-toggle {
        display: none;
      }

      .cs-logo {
        width: 18.4%;
        max-width: (197/16rem);
        height: (60/16rem);
        /* margin-right auto pushes everything away from it to the right */
        margin: 0 auto 0 0;
        padding: 0;
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 100;

        img {
          width: 100%;
          height: 100%;
          /* ensures the image never overflows the container. It stays contained within it's width and height and expands to fill it then stops once it reaches an edge */
          object-fit: contain;
        }
      }

      .cs-ul {
        width: 100%;
        margin: 0;
        padding: 0;
        display: flex;
        justify-content: flex-start;
        align-items: center;
        gap: (40/16rem);
      }

      .cs-li {
        list-style: none;
        padding: (36/16rem) 0;
        /* prevent flexbox from squishing it */
        flex: none;
      }

      .cs-li-link {
        /* 14px - 16px */
        font-size: clamp(0.875rem, 1.3vw, 1rem);
        line-height: 1.5em;
        text-decoration: none;
        margin: 0;
        color: var(--bodyTextColor);
        display: block;
        position: relative;
        transition: color 0.3s;

        &:hover {
          color: var(--primary);
        }

        &.cs-active {
          font-weight: 700;
          color: var(--headerColor);
        }
      }

      .cs-donate {
        text-decoration: none;
        display: none;
        justify-content: center;
        align-items: center;
        gap: (12/16rem);

        &:hover {
          .cs-donate-icon {
            transform: scale(1.1);
          }
        }
      }

      .cs-flex {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
      }

      .cs-donate-icon {
        width: (56/16rem);
        height: auto;
        transition: transform 0.3s;
      }

      .cs-desc {
        font-size: (16/16rem);
        line-height: 1.5em;
        margin: 0;
        color: var(--bodyTextColor);
      }

      .cs-header {
        font-size: (20/16rem);
        line-height: 1.2em;
        font-weight: 700;
        margin: 0;
        color: var(--headerColor);
      }

      .cs-button-solid {
        font-size: (16/16rem);
        /* 46px - 56px */
        line-height: clamp(2.875em, 5.5vw, 3.5em);
        text-decoration: none;
        font-weight: 700;
        text-align: center;
        margin: 0;
        color: #fff;
        min-width: (150/16rem);
        padding: 0 (32/16rem);
        background-color: var(--primary);
        border-radius: (8/16rem);
        overflow: hidden;
        display: inline-block;
        position: relative;
        z-index: 1;
        /* prevents padding from adding to the width */
        box-sizing: border-box;
        transition: color 0.3s;

        &:before {
          content: "";
          position: absolute;
          height: 100%;
          width: 0%;
          background: #1a1a1a;
          border-radius: (8/16rem);
          opacity: 1;
          top: 0;
          left: 0;
          z-index: -1;
          transition: width 0.3s;
        }

        &:hover {
          &:before {
            width: 100%;
          }
        }
      }

      .cs-nav-button {
        padding: 0 (48/16rem);
        display: none;
      }
    }
  }

  /* Large Desktop - 1300px */
  @media only screen and (min-width: 81.25rem) {
    #cs-navigation {
      .cs-container {
        justify-content: space-between;
      }

      .cs-nav-button {
        margin-left: auto;
        display: block;
      }
    }
  }

  /* Larger Desktop - 1600px */
  @media only screen and (min-width: 100rem) {
    #cs-navigation {
      .cs-donate {
        display: flex;
        margin-left: auto;
      }

      .cs-nav-button {
        margin: 0;
      }
    }
  }
</style>
